"use strict";var log=function(t){return console.log(t)};Array.max=function(t){return Math.max.apply(Math,t)},Array.min=function(t){return Math.min.apply(Math,t)};var Utils={};!function(){Utils.cloneDR=function t(e){var r="__getDeepCircularCopy__";if(e!==Object(e))return e;var n=r in e,a=e[r],i=void 0;if(n&&"function"==typeof a)return a();if(e[r]=function(){return i},e instanceof Array){i=[];for(var o=0;o<e.length;o++)i[o]=t(e[o])}else{i={};for(var d in e)d!=r?i[d]=t(e[d]):n&&(i[d]=t(a))}return n?e[r]=a:delete e[r],i},Utils.isObjLiteral=function(t){var e=t;return"object"!=typeof t||null===t?!1:function(){for(;;)if(null===Object.getPrototypeOf(e=Object.getPrototypeOf(e)))break;return Object.getPrototypeOf(t)===e}()}}();var pgm=function(t){function e(t){if(t.length<=1)throw new Error("input graph data is empty");for(var e=0,r=0;r<t.length;r++){if(t[r].id!==r)throw new Error("Vertex's id must match its position index in the list of vertices");var n=t[r].adjacentVertex;if(n){for(var a=0;a<n.length;a++)e+=n[a].weight;if(1!==e)throw new Error("The sum of a vertex's adjacent vertice's weight must be 1")}e=0}}function r(t){if(t.length<=1)throw new Error("input graph data is empty");for(var e=0;e<t.length;e++){var r=t[e];if(r.adjacentVertex){r.edges=[];for(var n=0;n<r.adjacentVertex.length;n++){var a=r.adjacentVertex[n].id,i=r.adjacentVertex[n].weight,o={edgeWeight:i,edgeNodes:[r,t[a]]};r.edges.push(o)}}else r.edges=null}}function n(t,e){function r(t){for(var e=[0],r=0,n=0;n<t.adjacentVertex.length;n++)r+=t.adjacentVertex[n].weight,e.push(r);var a=Math.random();console.log("weight distribution corresponding to adjacent vertices in the next layer: ("+e+") random pick: "+a);for(var n=0;n<e.length-1;n++)if(a>=e[n]&&a<=e[n+1])return t.adjacentVertex[n].id}for(var n=[t],a=e[t];void 0!==a.adjacentVertex;)console.log("Current Vertex: "+t),t=r(a),console.log("Vextex chosen: "+t),console.log("--------"),a=e[t],n.push(t);f=n}function a(){x.append("g").attr("class","x axis").selectAll("line").data(d3.range(0,u.transform.width,10)).enter().append("line").attr("x1",function(t){return t}).attr("y1",0).attr("x2",function(t){return t}).attr("y2",u.transform.height),x.append("g").attr("class","y axis").selectAll("line").data(d3.range(0,u.transform.height,10)).enter().append("line").attr("x1",0).attr("y1",function(t){return t}).attr("x2",u.transform.width).attr("y2",function(t){return t})}function i(t){d3.selectAll(".vertex").remove(),y=x.append("g").attr("class","vertex").selectAll("circle").data(t).enter().append("g").attr("id",function(t){return t.id}).attr("transform",function(t){return"translate("+t.x+","+t.y+")"}).call(p),y.append("circle").attr("r",function(t){return t.r}).attr("class","node"),y.append("text").attr("text-anchor","middle").text(function(t){return t.id})}function o(t){d3.selectAll("path").remove();for(var e=0;e<t.length;e++){var r=t[e];if(r.edges)for(var n=0;n<r.edges.length;n++){var a=r.edges[n].edgeNodes,i=r.edges[n].edgeWeight*u.edge.weightWidth;x.append("svg:path").attr("d",m(a)).style("stroke-width",u.edge.baseWidth+i).style("stroke",u.edge.defaultColor).style("fill","none")}}}function d(t){for(var e=function(e){var r=t[f[e]];if(r.edges)for(var n=function(t){var n=r.edges[t].edgeNodes,a=r.edges[t].edgeWeight*u.edge.weightWidth;f.indexOf(n[0].id)>-1&&f.indexOf(n[1].id)>-1&&!function(){var t=function(t){var e=t[0].x,r=t[0].y,n=t[0].r,a=t[1].x,i=t[1].y,o=t[1].r,d=a-e,s=r-i,l=Math.sqrt(d*d+s*s),c=n/(1*l),f=o/(1*l);return[{x:e+d*c,y:r-s*f},{x:a-d*c,y:i+s*f}]};setTimeout(function(){x.append("svg:path").style("stroke-width",u.edge.baseWidth+a).style("stroke",u.edge.visitedColor).style("fill","none").attr({d:m(t(n)),"stroke-dasharray":"1000 1000","stroke-dashoffset":1e3}).transition().duration(1500).attr("stroke-dashoffset",0)},u.edge.timeInterval*e),setTimeout(function(){y.append("circle").attr("class","node").attr("class",function(t){return f.indexOf(t.id)<=e+1&&f.indexOf(t.id)>-1?"visitedVertex":void 0}).attr("r",function(t){return t.r}),y.append("text").attr("text-anchor","middle").text(function(t){return t.id})},u.edge.timeInterval*(e+1)),y.append("circle").attr("class","node").attr("class",function(t){return f[0]==t.id?(log("visited"),"visitedVertex"):void 0}).attr("r",function(t){return t.r}),y.append("text").attr("text-anchor","middle").text(function(t){return t.id})}()},a=0;a<r.edges.length;a++)n(a)},r=0;r<f.length;r++)e(r)}function s(t){o(t),i(t)}function l(){f=[],s(c.data)}var c={clusterMat:[],data:[]},f=[],u=t||{transform:{x:0,y:0,width:window.innerWidth,height:window.innerHeight-80},edge:{baseWidth:2,weightWidth:18,defaultColor:"lightsteelblue",visitedColor:"steelblue",timeInterval:800},background:{grid:!1,color:"none"},zoom:!0},g=d3.behavior.zoom().scaleExtent([1,10]).on("zoom",function(){u.zoom&&x.attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")")}),h=!0,p=d3.behavior.drag().origin(function(t){return t}).on("dragstart",function(t){if(h){if(this.id<c.clusterMat[0]){d3.event.sourceEvent.stopPropagation(),d3.select(this).classed("dragging",!0);var e=parseInt(this.id,10);n(e,c.data),s(c.data),d(c.data),$(".path strong").text(f)}else l();h=!1,setTimeout(function(){return h=!0},u.edge.timeInterval*(f.length-1))}}),v=d3.select("body").append("svg").attr("width",u.transform.width).attr("height",u.transform.height).append("g").attr("transform","translate("+u.transform.x+","+u.transform.y+")").call(g),x=(v.append("rect").attr("width",u.transform.width).attr("height",u.transform.height).style("fill",u.background.color).style("pointer-events","all").on("click",function(t){h&&(l(),h=!1,setTimeout(function(){return h=!0},u.edge.timeInterval*(f.length-1)))}),v.append("g")),m=d3.svg.line().x(function(t){return t.x}).y(function(t){return t.y}).interpolate("linear"),y=void 0;this.bind=function(t){if(Utils.isObjLiteral(t)||(t=JSON.parse(t)),!t||!t.data)throw new Error("pgm.bind(gd): Input graph data is invalid input graph data is empty");if(t.data.length<=1)throw new Error("pgm.bind(gd): Input graph data is empty");c=t,e(c.data),r(c.data),u.background.grid&&a(),s(c.data)},this.display=function(){e(c.data),r(c.data),u.background.grid&&a(),s(c.data)},this.setAdjacentVertex=function(t,e){if(void 0===t||void 0===e)throw new Error("setAdjacentVertex(id, adjVtx) params are not satisfied.");c.data[t].adjacentVertex=e},this.getGraphData=function(){var t=Utils.cloneDR(c);console.log(t);for(var e=0;e<t.data.length;e++)delete t.data[e].edges;return JSON.stringify(t)},this.createCluster=function(t){for(var e=u.transform.width/(t.length+1),r=u.transform.height/(Array.max(t)+1),n=[],a=0,i=void 0,o=void 0,d=Array.min([e,r])/3,s=0;s<t.length;s++)for(var l=u.transform.height/(t[s]+1),f=0;f<t[s];f++)i=e*(s+1),o=l*(f+1),n.push({id:a,x:i,y:o,r:d}),a++;return c={clusterMat:t,data:n},{clusterMat:t,data:n}}};